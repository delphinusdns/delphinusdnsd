#!/bin/sh


VERSION="1.1.0-alpha"
DD_VERSION="delphinusdnsd-$VERSION"
DD_VERSION_LEN=`echo -n $DD_VERSION | wc -c`

echo "/* ddd-config.h - autogenerated by configure */" > ddd-config.h

until [ -z $1 ]
do
	case $1 in
		--user=*)
			user=`echo $1 | sed -e 's/--user=//g'`
			echo "#define DEFAULT_PRIVILEGE \"$user\"" >> ddd-config.h
			;;
		*)
			echo "usage: configure [--user=USERNAME]"
			exit
			;;
	esac
	shift
done

echo "#define DD_CONVERT_VERSION \"dd-convert $VERSION\"" >> ddd-config.h
echo "#define DD_VERSION \"$DD_VERSION\"" >> ddd-config.h
echo "#define DD_VERSION_LEN $DD_VERSION_LEN" >> ddd-config.h

openbsd() {
	echo configuring for OpenBSD
	cp Makefile.openbsd Makefile
	cp delphinusdnsd/Makefile.openbsd delphinusdnsd/Makefile
	cp dd-convert/Makefile.openbsd dd-convert/Makefile
}

netbsd() {
	echo configuring for NetBSD
	cp Makefile.netbsd Makefile
}

freebsd() {
	echo configuring for FreeBSD
	cp Makefile.freebsd Makefile
	cp delphinusdnsd/Makefile.freebsd delphinusdnsd/Makefile
	cp dd-convert/Makefile.freebsd dd-convert/Makefile
	
}

linux() {
	echo configuring for Linux
	cp Makefile.linux Makefile
}

darwin() {
	echo configuring for Darwin
	cp Makefile.macosx Makefile
}


case "`uname -s`" in
Darwin)
		darwin;
		;;
OpenBSD)
		openbsd;
		;;
FreeBSD)
		freebsd
		;;	
NetBSD)
		netbsd;
		;;
Linux)
		linux
	;;
esac

echo done.  Type make to make programs.
